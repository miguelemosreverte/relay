name: Simple Benchmark

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  benchmark:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Generate test data
      run: |
        echo "ðŸ“Š Generating test performance data..."
        
        # Create dummy performance report
        cat > performance-report.json << EOF
        {
          "results": {
            "timestamp": "$(date -u +%Y-%m-%dT%H:%M:%SZ)",
            "metrics": {
              "messages_per_second": $((RANDOM % 100 + 50)),
              "bandwidth_mbps": $(echo "scale=2; $RANDOM/1000" | bc),
              "total_messages": $((RANDOM % 10000 + 1000)),
              "total_bytes": $((RANDOM % 1000000 + 100000))
            },
            "test_duration_ms": $((RANDOM % 5000 + 5000))
          }
        }
        EOF
        
        echo "âœ… Generated performance-report.json"
        cat performance-report.json
    
    - name: Create reports
      run: |
        # Create markdown report
        cat > performance-report.md << EOF
        # Performance Report
        Generated: $(date -u +%Y-%m-%dT%H:%M:%SZ)
        Commit: ${{ github.sha }}
        EOF
        
        # Create HTML report
        cat > performance-report.html << EOF
        <html><body>
        <h1>Performance Report</h1>
        <p>Generated: $(date)</p>
        <p>Commit: ${{ github.sha }}</p>
        </body></html>
        EOF
    
    - name: Checkout gh-pages
      uses: actions/checkout@v4
      with:
        ref: gh-pages
        path: gh-pages
      continue-on-error: true
    
    - name: Prepare Pages content
      run: |
        mkdir -p pages-content/reports/${{ github.sha }}
        
        # Copy existing reports if any
        if [ -d gh-pages/reports ]; then
          cp -r gh-pages/reports/* pages-content/reports/ || true
        fi
        
        # Copy new reports
        cp performance-report.* pages-content/reports/${{ github.sha }}/
        
        # Update index using simple shell
        if [ -f gh-pages/reports/index.json ]; then
          cp gh-pages/reports/index.json pages-content/reports/
        else
          echo '{"reports":[]}' > pages-content/reports/index.json
        fi
        
        # Add new report to index (using Python)
        export COMMIT_SHA="${{ github.sha }}"
        export TIMESTAMP="$(date -u +%Y-%m-%dT%H:%M:%SZ)"
        export ACTOR="${{ github.actor }}"
        export BRANCH="${{ github.ref_name }}"
        
        python3 << EOF
import json
import os

with open('pages-content/reports/index.json', 'r') as f:
    data = json.load(f)
    
metrics = json.load(open('performance-report.json'))['results']['metrics']
data['reports'].insert(0, {
    "commit": os.environ.get('COMMIT_SHA', 'unknown'),
    "timestamp": os.environ.get('TIMESTAMP', 'unknown'),
    "actor": os.environ.get('ACTOR', 'unknown'),
    "branch": os.environ.get('BRANCH', 'main'),
    "throughput": metrics['messages_per_second'],
    "latency": 10,
    "bandwidth": metrics['bandwidth_mbps']
})
data['reports'] = data['reports'][:50]

with open('pages-content/reports/index.json', 'w') as f:
    json.dump(data, f, indent=2)
EOF
        
        # Copy dashboard
        cp -r docs/* pages-content/ || true
    
    - name: Deploy to GitHub Pages
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ./pages-content
        keep_files: true
    
    - name: Summary
      run: |
        echo "## âœ… Benchmark Complete!" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "Dashboard: https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}/" >> $GITHUB_STEP_SUMMARY